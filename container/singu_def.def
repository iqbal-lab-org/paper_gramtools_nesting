# Usage: `sudo singularity build built/image_name.img singu_def.def`
# Tested on: singularity v3.4.0-1

BootStrap: docker
From: ubuntu:xenial  

%post
    export DEBIAN_FRONTEND=noninteractive

	# essentials
	apt-get update
	apt-get install -y \
	build-essential \
	cmake \
	automake \
	git \
	liblzma-dev \
	libbz2-dev \
	libhts-dev \
	pkg-config \
	python3 \
	python3-pip \
	wget \
	zlib1g-dev

	pip3 install pip==20.0.2 # upgrade pip


	# analysis tools
	## htslib, samtools, bcftools
	cd ${HOME}
	wget https://github.com/samtools/htslib/releases/download/1.10.2/htslib-1.10.2.tar.bz2 
	tar -xf htslib-1.10.2.tar.bz2 && cd htslib-1.10.2 && ./configure && make && make install

	hts_dir="${HOME}/htslib-1.10.2"

	cd ${HOME}
	apt-get install -y libncurses5-dev
	wget https://github.com/samtools/samtools/releases/download/1.10/samtools-1.10.tar.bz2
	tar -xf samtools-1.10.tar.bz2 && cd samtools-1.10 && ./configure --with-htslib=${hts_dir} && make && make install

	cd ${HOME}
	wget https://github.com/samtools/bcftools/releases/download/1.10.2/bcftools-1.10.2.tar.bz2
	tar -xf bcftools-1.10.2.tar.bz2 && cd bcftools-1.10.2 && ./configure --with-htslib=${hts_dir} && make && make install
	
	## bedtools
	wget https://github.com/arq5x/bedtools2/releases/download/v2.29.2/bedtools.static.binary
	chmod a+x bedtools.static.binary && mv bedtools.static.binary /usr/bin/bedtools

	## mafft
	wget https://mafft.cbrc.jp/alignment/software/mafft_7.450-1_amd64.deb -O mafft && dpkg -i mafft && rm mafft

	## bowtie2
	wget https://github.com/BenLangmead/bowtie2/releases/download/v2.4.1/bowtie2-2.4.1-linux-x86_64.zip
	unzip bowtie2-2.4.1-linux-x86_64.zip
	cp bowtie2-2.4.1-linux-x86_64/bowtie* /usr/bin/

	## make_prg
	git clone https://github.com/rmcolq/make_prg.git
	cd make_prg && git checkout e84e891a7bd8b8b3dc73e44345fc2750569822fa
	python3 setup.py install

	## art_ilmn
	wget https://www.niehs.nih.gov/research/resources/assets/docs/artsrcmountrainier2016.06.05linux.tgz
	tar xvf artsrcmountrainier2016.06.05linux.tgz
	cp art_src_MountRainier_Linux/art_illumina /usr/bin/
	rm -r artsrcmountrainier2016.06.05linux.tgz art_src_MountRainier_Linux

	/*************/
	/* gramtools */
	/*************/
	#apt-get install -y g++-8
    #ln -sf /usr/bin/g++-8 /usr/bin/g++ # Default to g++-8

	# gramtools::cortex
	apt-get install -y python2.7 python2.7-dev r-base

	pip3 install git+https://github.com/iqbal-lab-org/cluster_vcf_records/ 

	# Currently below fails, due to linker error in cortex build (due to htslib incompatibilities)
	# Also does not install encode_prg
	#pip3 install git+https://github.com/iqbal-lab-org/gramtools@c4f21b8ade0de0f7e8386b6df4e86d849d3045ba

	# Install encode_prg
	git clone https://github.com/iqbal-lab-org/gramtools
	cd gramtools && git checkout 7ed1721c21899cad385f88acb0b5dcff92dd2851
	mkdir cmake-build-release && cd cmake-build-release
	cmake .. -DCMAKE_BUILD_TYPE=REL_WITH_ASSERTS
	make -j 4 encode_prg combine_jvcfs
	cp ../libgramtools/submods/encode_prg /usr/bin/
	cp ../libgramtools/submods/combine_jvcfs /usr/bin/
	
	# Make gram
	make -j 4 gram

	cd ..
	pip install . # Weirdly this does not install bin/gram if `make gram` was not run previously, while `python setup.py install .` does 

%environment
    export LC_ALL=C

%labels
    Author Brice Letcher
